unit Unit1;

interface

uses
  System.Generics.Collections {TDictionary} ,
  PhisicsControllerUnit {PhisicsController} ,
  ControllersUnit {Controllers} ,
  System.SysUtils, System.Types, System.UITypes, System.Rtti, System.Classes,
  System.Variants, FMX.Types, FMX.Controls, FMX.Forms, FMX.Dialogs;

type
  TForm1 = class(TForm)

    procedure FormCreate(Sender: TObject);
    procedure Label1Enter(Sender: TObject);
  private
    Buttons: TList<TButton>;
    list: TList<string>;
    ButtonsAnswer: TList<TButton>;
    /// <link>aggregation</link>
    Controller1: Controllers;
    procedure createListAnswer;
    procedure createQuestCaption;
    procedure getQuest;
    procedure destroyButtons;
    procedure createButtons(list: TList<string>);
    procedure createNextAnswer;
    procedure destroyButtonsAnswer;
    procedure createButtonsAnswer(list: TList<string>);
  public
    procedure onButtonClick1(Sender: TObject);
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

procedure TForm1.createButtons(list: TList<string>);
var
  i: integer;
  s: string;
begin
  i := 0;
  Buttons := TList<TButton>.Create;
  self.list := TList<string>.Create;
  self.list := list;
  for s in list do
  begin
    Buttons.Add(TButton.Create(self));
    with Buttons.Last do
    begin
      Parent := self;
      Position.Y := i * 41;
      Text := s;
      Width := 300;
      OnClick := onButtonClick1;
    end;
    i := i + 1;
  end;
end;

procedure TForm1.createButtonsAnswer(list: TList<string>);
var i:integer;
s:string;
begin
  ButtonsAnswer :=TList<TButton>.Create;
  self.listAnswer:=TList<string>.create;
  self.listAnswer:=list;
  for s in listAnswer do
    begin
      ButtonsAnswer.Add(TButton.Create(self));
      with ButtonsAnswer.Last do
      begin
        Parent:= self;
        Position.Y:=i*41;
        Text:=s;
        Width:=300;
        OnClick:=OnButtonAnswerClick1;
      end;
      i:=i+1;
    end;
end;

procedure TForm1.createListAnswer;
var
  listAnswer: TList<string>;
begin
  listAnswer := TList<string>.Create;
  listAnswer := Controller1.getListAnswer;
  createNextAnswer;
end;

procedure TForm1.createNextAnswer;
begin
  createButtonsAnswer(Controller1.getListAnswer);
end;

procedure TForm1.createQuestCaption;
begin
  self.Caption := Controller1.getQuestCaption;
end;

procedure TForm1.destroyButtons;
var
  b: TButton;
begin
  for b in Buttons do
  begin
    b.Parent := nil;
  end;
  Buttons.DeleteRange(0, Buttons.Count - 1);
end;

procedure TForm1.destroyButtonsAnswer;
var
  b: TButton;
begin
  for b in ButtonsAnswer do
  begin
    b.Parent := nil;
  end;
  ButtonsAnswer.DeleteRange(0, ButtonsAnswer.Count - 1);
end;

procedure TForm1.FormCreate(Sender: TObject);
var
  list: TList<string>;
begin
  Controller1 := PhisicsController.Create;
  list := TList<string>.Create;
  list := Controller1.getMenu;
  createButtons(list);
end;

procedure TForm1.getQuest;
begin
  createQuestCaption;
  createListAnswer;
end;

procedure TForm1.Label1Enter(Sender: TObject);
begin
  self.Caption := '1111111';
end;

procedure TForm1.onButtonClick1(Sender: TObject);
var
  questCaption: string;
  listAnswer: TList<string>;
begin
  Controller1.setTest((Sender as TButton).Text);
  destroyButtons;
  getQuest;
end;

end.
